//@author @pkmelo7

package com.mycompany.telas;

//Importações necessárias
import com.mycompany.classes.GerenciadorDeCarrinho;
import com.mycompany.classes.ProdutoCarrinho;
import com.mycompany.classes.Session;
import com.mycompany.classes.Usuario;
import com.mycompany.scrollbar.ScrollBarCustom;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.Timer;
//Fim das importações necessárias

public class Tela_Carrinho extends javax.swing.JFrame
{
    //Declaração de variáveis
        Session sessao = new Session();
       
        GerenciadorDeCarrinho gerenciador = new GerenciadorDeCarrinho();
    
        //Variáveis para o movimento do logo Synapse
        final int originalX = 10;
        final int targetX = 150;
        final int step = 10;
        Timer timer = new Timer(20, null);
        
        //Variaveis para configurar a fonte poppins
        Font poppins;
        GraphicsEnvironment GE = GraphicsEnvironment.getLocalGraphicsEnvironment();
        
        //Variavel para trazer o icone do projeto
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/icon.png"));
        
        //Variavel para trazer a classe ProdutoCarrinho
        ProdutoCarrinho produtoCarrinho = new ProdutoCarrinho();
       
        Timer timerAlerta;
                
        boolean acaoConcluida = false;
        
    //Final da declaração de variáveis
        
    //Variavel provisoria para teste    
    int totalcarrinho = 0;
    
    //Declaração de métodos
    
    //cria o método abrirTela_Menu, onde invoca a tela de menu e fecha a tela atual
        private void abrirTelaMenu() throws FontFormatException, IOException, SQLException
        {
            Tela_Menu TelaMenu = new Tela_Menu();
            this.dispose();
            TelaMenu.setVisible(true);
        }
        
        //cria o método abrirTela_Sobre, onde invoca a tela de sobre e fecha a tela de cadastro
        private void abrirTela_Sobre() throws FontFormatException, IOException, SQLException
        {
            Tela_Sobre Tela_Sobre = new Tela_Sobre();
            this.dispose();
            Tela_Sobre.setVisible(true);
        }
        
        private void abrirTelaCursos() throws FontFormatException, IOException, SQLException
        {
            Tela_Cursos Cursos = new Tela_Cursos();
            this.dispose();
            Cursos.setVisible(true);
        }
        
        public static String capitalizeFirstLetter(String text) 
        {
            if (text == null || text.isEmpty()) 
            {
                return text; // Retorna o texto original se for nulo ou vazio
            }
            return text.substring(0, 1).toUpperCase() + text.substring(1).toLowerCase();
        }
    //Fim da declaração de métodos
    
    public Tela_Carrinho() throws FontFormatException, IOException, SQLException {
        //cria a fonte poppins no projeto
        this.poppins = Font.createFont(Font.TRUETYPE_FONT, new File("src/main/resources/fonts/Poppins-Bold.ttf"));
        initComponents();
        //Configurar scrollbar vertical como customizada
        scrollbar.setVerticalScrollBar(new ScrollBarCustom());  
        
        Usuario usu = null;
        
        if(sessao.isUserLoggedIn())
        {   
            labelPerfil.setVisible(true);
            usu = sessao.getLoggedUser();
            String user = usu.getUser();
            if(user != null)
            {
                String nomeUser = usu.getPrimeiroNomePorUsuario(user);
                labelPerfil.setText(capitalizeFirstLetter(nomeUser));
            }
        }
        else
        {
            labelPerfil.setVisible(false);
        }
        
        try
        {
            gerenciador.listarCarrinho(carrinho, scrollbar, labelQtdCarrinho, labelTotal, buttonFinalizarCompra);
        }
        catch(Exception e)
        {
            System.out.println("não foi possivel listar");
        }

        gerenciador.atualizarLabelValor(labelTotal);
        
        if(Session.getCursosNoCarrinho().size()>0)
        {
            buttonFinalizarCompra.setVisible(true);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAlerta = new javax.swing.JPanel();
        panelAlerta2 = new javax.swing.JPanel();
        labelAlerta = new javax.swing.JLabel();
        buttonOkAlerta = new javax.swing.JButton();
        labelContagem = new javax.swing.JLabel();
        fundoAlerta = new javax.swing.JLabel();
        fundoPrincipal = new javax.swing.JPanel();
        panelPerfil = new javax.swing.JPanel();
        buttonMeuPerfil = new javax.swing.JButton();
        buttonMeusCursos = new javax.swing.JButton();
        buttonLogout = new javax.swing.JButton();
        labelPerfil = new javax.swing.JLabel();
        buttonPerfil = new javax.swing.JButton();
        buttonSynapse = new javax.swing.JButton();
        buttonSynapseLogo = new javax.swing.JButton();
        fieldPesquisa = new javax.swing.JTextField();
        buttonXpesq = new javax.swing.JButton();
        buttonSobre = new javax.swing.JButton();
        buttonCursos = new javax.swing.JButton();
        buttonXTelas = new javax.swing.JButton();
        buttonPR = new javax.swing.JButton();
        buttonAplicarDesc = new javax.swing.JButton();
        labelDescontos = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        buttonFinalizarCompra = new javax.swing.JButton();
        scrollbar = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        carrinho = new javax.swing.JPanel();
        labelQtdCarrinho = new javax.swing.JLabel();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Synapse Connect");
        setBackground(new java.awt.Color(224, 222, 222));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setIconImage(icon.getImage());
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 750));
        getContentPane().setLayout(null);

        panelAlerta.setOpaque(false);
        panelAlerta.setVisible(false);
        panelAlerta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelAlertaMouseClicked(evt);
            }
        });
        panelAlerta.setLayout(null);

        panelAlerta2.setBackground(new java.awt.Color(204, 204, 204));
        panelAlerta2.setForeground(new java.awt.Color(69, 82, 173));
        panelAlerta2.setLayout(null);

        labelAlerta.setFont(poppins.deriveFont(20f));
        labelAlerta.setForeground(new java.awt.Color(69, 82, 173));
        labelAlerta.setHorizontalAlignment(SwingConstants.CENTER);
        panelAlerta2.add(labelAlerta);
        labelAlerta.setBounds(7, 66, 490, 100);

        buttonOkAlerta.setBackground(new java.awt.Color(0, 0, 0));
        buttonOkAlerta.setFont(poppins.deriveFont(20f));
        buttonOkAlerta.setForeground(new java.awt.Color(69, 82, 173));
        buttonOkAlerta.setText("OK");
        buttonOkAlerta.setBorder(null);
        buttonOkAlerta.setBorderPainted(false);
        buttonOkAlerta.setContentAreaFilled(false);
        buttonOkAlerta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonOkAlerta.setFocusable(false);
        buttonOkAlerta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonOkAlertaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonOkAlertaMouseExited(evt);
            }
        });
        panelAlerta2.add(buttonOkAlerta);
        buttonOkAlerta.setBounds(355, 210, 100, 40);

        labelContagem.setBackground(new java.awt.Color(0, 0, 0));
        labelContagem.setFont(poppins.deriveFont(20f));
        labelContagem.setForeground(new java.awt.Color(69, 82, 173));
        labelContagem.setText("Tempo Restante: 5");
        labelContagem.setHorizontalAlignment(SwingConstants.RIGHT);
        panelAlerta2.add(labelContagem);
        labelContagem.setBounds(87, 210, 260, 40);

        fundoAlerta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/FundosTelas/janelaAlerta.png"))); // NOI18N
        fundoAlerta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(69, 82, 173), 1, true));
        panelAlerta2.add(fundoAlerta);
        fundoAlerta.setBounds(0, 0, 500, 280);

        panelAlerta.add(panelAlerta2);
        panelAlerta2.setBounds(433, 243, 500, 281);

        getContentPane().add(panelAlerta);
        panelAlerta.setBounds(0, 0, 1366, 768);

        fundoPrincipal.setBackground(new java.awt.Color(224, 222, 222));
        fundoPrincipal.setForeground(new java.awt.Color(224, 222, 222));
        fundoPrincipal.setLayout(null);

        panelPerfil.setBackground(new java.awt.Color(255, 255, 255));
        panelPerfil.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(69, 82, 173), 1, true));
        panelPerfil.setVisible(false);
        panelPerfil.setLayout(null);

        buttonMeuPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/MeuPerfil.png"))); // NOI18N
        buttonMeuPerfil.setBorder(null);
        buttonMeuPerfil.setBorderPainted(false);
        buttonMeuPerfil.setContentAreaFilled(false);
        buttonMeuPerfil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonMeuPerfil.setFocusPainted(false);
        buttonMeuPerfil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonMeuPerfilMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonMeuPerfilMouseExited(evt);
            }
        });
        buttonMeuPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMeuPerfilActionPerformed(evt);
            }
        });
        panelPerfil.add(buttonMeuPerfil);
        buttonMeuPerfil.setBounds(10, 13, 210, 40);

        buttonMeusCursos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/MeusCursos.png"))); // NOI18N
        buttonMeusCursos.setBorder(null);
        buttonMeusCursos.setBorderPainted(false);
        buttonMeusCursos.setContentAreaFilled(false);
        buttonMeusCursos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonMeusCursos.setFocusPainted(false);
        buttonMeusCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonMeusCursosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonMeusCursosMouseExited(evt);
            }
        });
        buttonMeusCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMeusCursosActionPerformed(evt);
            }
        });
        panelPerfil.add(buttonMeusCursos);
        buttonMeusCursos.setBounds(10, 60, 210, 40);

        buttonLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/Logout.png"))); // NOI18N
        buttonLogout.setBorder(null);
        buttonLogout.setBorderPainted(false);
        buttonLogout.setContentAreaFilled(false);
        buttonLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonLogout.setFocusPainted(false);
        buttonLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonLogoutMouseExited(evt);
            }
        });
        buttonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogoutActionPerformed(evt);
            }
        });
        panelPerfil.add(buttonLogout);
        buttonLogout.setBounds(10, 107, 210, 40);

        fundoPrincipal.add(panelPerfil);
        panelPerfil.setBounds(1120, 110, 230, 210);

        labelPerfil.setBackground(new java.awt.Color(102, 255, 102));
        labelPerfil.setFont(poppins.deriveFont(16f));
        labelPerfil.setForeground(new java.awt.Color(0, 0, 0));
        labelPerfil.setHorizontalAlignment(SwingConstants.CENTER);
        fundoPrincipal.add(labelPerfil);
        labelPerfil.setBounds(1190, 58, 110, 37);

        buttonPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/Conta.png"))); // NOI18N
        buttonPerfil.setBorder(null);
        buttonPerfil.setBorderPainted(false);
        buttonPerfil.setContentAreaFilled(false);
        buttonPerfil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonPerfil.setFocusPainted(false);
        buttonPerfil.setMaximumSize(new java.awt.Dimension(86, 19));
        buttonPerfil.setMinimumSize(new java.awt.Dimension(86, 19));
        if(sessao.isUserLoggedIn())
        {
            buttonPerfil.setVisible(true);
        }
        else
        {
            buttonPerfil.setVisible(false);
        }
        buttonPerfil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonPerfilMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonPerfilMouseExited(evt);
            }
        });
        buttonPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPerfilActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonPerfil);
        buttonPerfil.setBounds(1150, 52, 170, 50);

        buttonSynapse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/NomeLogo.png"))); // NOI18N
        buttonSynapse.setBorder(null);
        buttonSynapse.setBorderPainted(false);
        buttonSynapse.setContentAreaFilled(false);
        buttonSynapse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSynapse.setFocusPainted(false);
        buttonSynapse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSynapseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSynapseMouseExited(evt);
            }
        });
        buttonSynapse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSynapseActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonSynapse);
        buttonSynapse.setBounds(30, 0, 260, 160);

        buttonSynapseLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/IconSynapse.png"))); // NOI18N
        buttonSynapseLogo.setBorder(null);
        buttonSynapseLogo.setBorderPainted(false);
        buttonSynapseLogo.setContentAreaFilled(false);
        buttonSynapseLogo.setFocusPainted(false);
        fundoPrincipal.add(buttonSynapseLogo);
        buttonSynapseLogo.setBounds(10, 0, 170, 160);

        fieldPesquisa.setBackground(new java.awt.Color(224, 222, 222));
        fieldPesquisa.setFont(poppins.deriveFont(14f));
        fieldPesquisa.setForeground(new java.awt.Color(128, 128, 128));
        fieldPesquisa.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldPesquisa.setText("Pesquisar:");
        fieldPesquisa.setBorder(null);
        fieldPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldPesquisaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldPesquisaFocusLost(evt);
            }
        });
        fieldPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPesquisaActionPerformed(evt);
            }
        });
        fundoPrincipal.add(fieldPesquisa);
        fieldPesquisa.setBounds(380, 50, 380, 50);

        buttonXpesq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/X.png"))); // NOI18N
        buttonXpesq.setBorder(null);
        buttonXpesq.setBorderPainted(false);
        buttonXpesq.setContentAreaFilled(false);
        buttonXpesq.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonXpesq.setFocusPainted(false);
        buttonXpesq.setMaximumSize(new java.awt.Dimension(86, 19));
        buttonXpesq.setMinimumSize(new java.awt.Dimension(86, 19));
        buttonXpesq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonXpesqMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonXpesqMouseExited(evt);
            }
        });
        buttonXpesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXpesqActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonXpesq);
        buttonXpesq.setBounds(780, 60, 40, 30);

        buttonSobre.setFont(poppins.deriveFont(24f));
        buttonSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/Sobre.png"))); // NOI18N
        buttonSobre.setBorder(null);
        buttonSobre.setBorderPainted(false);
        buttonSobre.setContentAreaFilled(false);
        buttonSobre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSobre.setFocusPainted(false);
        buttonSobre.setMaximumSize(new java.awt.Dimension(86, 19));
        buttonSobre.setMinimumSize(new java.awt.Dimension(86, 19));
        buttonSobre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSobreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSobreMouseExited(evt);
            }
        });
        buttonSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSobreActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonSobre);
        buttonSobre.setBounds(920, 62, 100, 30);

        buttonCursos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/Cursos.png"))); // NOI18N
        buttonCursos.setBorder(null);
        buttonCursos.setBorderPainted(false);
        buttonCursos.setContentAreaFilled(false);
        buttonCursos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonCursos.setFocusPainted(false);
        buttonCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonCursosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonCursosMouseExited(evt);
            }
        });
        buttonCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCursosActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonCursos);
        buttonCursos.setBounds(1030, 62, 100, 30);

        buttonXTelas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/XFecharTelas.png"))); // NOI18N
        buttonXTelas.setBorder(null);
        buttonXTelas.setBorderPainted(false);
        buttonXTelas.setContentAreaFilled(false);
        buttonXTelas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonXTelas.setFocusPainted(false);
        buttonXTelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonXTelasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonXTelasMouseExited(evt);
            }
        });
        buttonXTelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXTelasActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonXTelas);
        buttonXTelas.setBounds(1280, 0, 86, 25);

        buttonPR.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        buttonPR.setForeground(new java.awt.Color(255, 255, 255));
        buttonPR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/IconSynapsePreto.png"))); // NOI18N
        buttonPR.setBorder(null);
        buttonPR.setBorderPainted(false);
        buttonPR.setContentAreaFilled(false);
        buttonPR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonPR.setFocusPainted(false);
        buttonPR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonPRMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonPRMouseExited(evt);
            }
        });
        buttonPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPRActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonPR);
        buttonPR.setBounds(1270, 658, 80, 70);

        buttonAplicarDesc.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        buttonAplicarDesc.setForeground(new java.awt.Color(255, 255, 255));
        buttonAplicarDesc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/AplicarDesconto.png"))); // NOI18N
        buttonAplicarDesc.setBorder(null);
        buttonAplicarDesc.setBorderPainted(false);
        buttonAplicarDesc.setContentAreaFilled(false);
        buttonAplicarDesc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonAplicarDesc.setFocusPainted(false);
        buttonAplicarDesc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonAplicarDescMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonAplicarDescMouseExited(evt);
            }
        });
        buttonAplicarDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAplicarDescActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonAplicarDesc);
        buttonAplicarDesc.setBounds(863, 679, 80, 50);

        labelDescontos.setFont(poppins.deriveFont(24f));
        labelDescontos.setForeground(new java.awt.Color(156, 156, 156));
        labelDescontos.setText("Descontos aplicados: R$"+totalcarrinho);
        fundoPrincipal.add(labelDescontos);
        labelDescontos.setBounds(25, 725, 550, 30);

        labelTotal.setFont(poppins.deriveFont(40f));
        labelTotal.setForeground(new java.awt.Color(30, 30, 30));
        fundoPrincipal.add(labelTotal);
        labelTotal.setBounds(25, 680, 550, 50);

        buttonFinalizarCompra.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        buttonFinalizarCompra.setForeground(new java.awt.Color(255, 255, 255));
        buttonFinalizarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/FinalizarCompra.png"))); // NOI18N
        buttonFinalizarCompra.setBorder(null);
        buttonFinalizarCompra.setBorderPainted(false);
        buttonFinalizarCompra.setContentAreaFilled(false);
        buttonFinalizarCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonFinalizarCompra.setFocusPainted(false);
        buttonFinalizarCompra.setVisible(false);
        buttonFinalizarCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonFinalizarCompraMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonFinalizarCompraMouseExited(evt);
            }
        });
        buttonFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFinalizarCompraActionPerformed(evt);
            }
        });
        fundoPrincipal.add(buttonFinalizarCompra);
        buttonFinalizarCompra.setBounds(1020, 674, 200, 60);

        scrollbar.setBorder(null);
        scrollbar.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        try
        {
            if(Session.getItensNoCarrinho()>0)
            {
                scrollbar.setVisible(true);
            }
            else
            {
                scrollbar.setVisible(false);
            }
        }
        catch(Exception e)
        {
            System.out.println("abljeadndwa");
        }

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        carrinho.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout carrinhoLayout = new javax.swing.GroupLayout(carrinho);
        carrinho.setLayout(carrinhoLayout);
        carrinhoLayout.setHorizontalGroup(
            carrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        carrinhoLayout.setVerticalGroup(
            carrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(carrinho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1651, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(carrinho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 419, Short.MAX_VALUE))
        );

        scrollbar.setViewportView(jPanel1);

        fundoPrincipal.add(scrollbar);
        scrollbar.setBounds(0, 205, 970, 420);

        labelQtdCarrinho.setBackground(new java.awt.Color(255, 255, 255));
        labelQtdCarrinho.setFont(poppins.deriveFont(20f));
        labelQtdCarrinho.setForeground(new java.awt.Color(0, 0, 0));
        labelQtdCarrinho.setText("Carrinho vazio.");
        try
        {
            if (labelQtdCarrinho != null) 
            {
                if (Session.getItensNoCarrinho()==0) 
                {
                    labelQtdCarrinho.setText("Carrinho vazio.");
                } 
                else if (Session.getItensNoCarrinho() == 1) 
                {
                    labelQtdCarrinho.setText(Session.getItensNoCarrinho() + " produto no carrinho.");
                } 
                else 
                {
                    labelQtdCarrinho.setText(Session.getItensNoCarrinho() + " produtos no carrinho.");
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Erro. Não foi possivel atualizar o label.");
        }
        fundoPrincipal.add(labelQtdCarrinho);
        labelQtdCarrinho.setBounds(10, 175, 940, 30);

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/FundosTelas/FundoCarrinho.png"))); // NOI18N
        fundoPrincipal.add(fundo);
        fundo.setBounds(0, -17, 1370, 800);

        getContentPane().add(fundoPrincipal);
        fundoPrincipal.setBounds(0, 0, 1366, 768);

        setBounds(-6, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents
//---------------------------------------------------------------------------------------------------------------------------------
    
//Início dos comandos do botão do Logo "Synapse Connect"
    //<null>
    private void buttonSynapseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSynapseActionPerformed
            try {
                // TODO add your handling code here:
                abrirTelaMenu();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonSynapseActionPerformed
    //Move o Logo "Synapse Connect" à posição final enquanto o mouse estiver em cima
    private void buttonSynapseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSynapseMouseEntered
        // TODO add your handling code here:
        timer.stop();
        timer = new Timer(20, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                int x = buttonSynapseLogo.getX();
                int y = buttonSynapseLogo.getY();

                if (x < targetX) {
                    buttonSynapseLogo.setLocation(x + step, y);
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_buttonSynapseMouseEntered
    //Move o Logo "Synapse Connect" à posição inicial quando o mouse sair de cima
    private void buttonSynapseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSynapseMouseExited
        // TODO add your handling code here:
        timer.stop();
        timer = new Timer(20, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                int x = buttonSynapseLogo.getX();
                int y = buttonSynapseLogo.getY();

                if (x > originalX) {
                    buttonSynapseLogo.setLocation(x - step, y);
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_buttonSynapseMouseExited
//Fim dos comandos do botão do Logo "Synapse Connect"
    
//---------------------------------------------------------------------------------------------------------------------------------
    
//Início dos comandos do field "Pesquisar"
    //<null>
    private void fieldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPesquisaActionPerformed
    //Faz com que a palavra "Pesquisar" desapareça de dentro do field quando o foco é retomado
    private void fieldPesquisaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPesquisaFocusGained
        // TODO add your handling code here:
        if (fieldPesquisa.getText().equals("Pesquisar:")) {
            fieldPesquisa.setText("");
            fieldPesquisa.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_fieldPesquisaFocusGained
    //Faz com que a palavra "Pesquisar" apareça dentro do field quando o foco é perdido
    private void fieldPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPesquisaFocusLost
        // TODO add your handling code here:
        if (fieldPesquisa.getText().isEmpty()) {
            fieldPesquisa.setForeground(Color.GRAY);
            fieldPesquisa.setText("Pesquisar:");
        }
    }//GEN-LAST:event_fieldPesquisaFocusLost
//Início dos comandos do botão "X" para o field "Pesquisar"
    //Faz com que ao clicar no botão "X", tudo que possa estar escrito dentro do field "Pesquisar" seja apagado e o field seja setado novamente como "Pesquisar" na cor cinza
    private void buttonXpesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXpesqActionPerformed
        // TODO add your handling code here:
        fieldPesquisa.setForeground(Color.GRAY);
        fieldPesquisa.setText("Pesquisar:");
    }//GEN-LAST:event_buttonXpesqActionPerformed
    //Faz o botão de X para o field "Pesquisar" ficar Azul ao passar o mouse por cima
    private void buttonXpesqMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXpesqMouseEntered
        // TODO add your handling code here:
        ImageIcon XpesqAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XAzul.png"));
        buttonXpesq.setIcon(XpesqAzul);
    }//GEN-LAST:event_buttonXpesqMouseEntered
    //Faz o botão de X para o field "Pesquisar" voltar à cor padrão ao tirar o mouse de cima
    private void buttonXpesqMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXpesqMouseExited
        // TODO add your handling code here:
        ImageIcon Xpesq = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/X.png"));
        buttonXpesq.setIcon(Xpesq);
    }//GEN-LAST:event_buttonXpesqMouseExited
//Fim dos comandos do botão "X" para o field "Pesquisar"
//Fim dos comandos do field "Pesquisar"
    
//---------------------------------------------------------------------------------------------------------------------------------

//Início dos comandos do botão "Sobre"
    //<null>
    private void buttonSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSobreActionPerformed
            try {
                // TODO add your handling code here:
                abrirTela_Sobre();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonSobreActionPerformed
    //Faz o botão Sobre ficar Azul ao passar o mouse por cima
    private void buttonSobreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSobreMouseEntered
        // TODO add your handling code here:
        ImageIcon SobreAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/SobreAzul.png"));
        buttonSobre.setIcon(SobreAzul);
    }//GEN-LAST:event_buttonSobreMouseEntered
    //Faz o botão Sobre voltar à cor padrão ao tirar o mouse de cima
    private void buttonSobreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSobreMouseExited
        // TODO add your handling code here:
        ImageIcon Sobre = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Sobre.png"));
        buttonSobre.setIcon(Sobre);
    }//GEN-LAST:event_buttonSobreMouseExited
//Fim dos comandos do botão "Sobre"

//---------------------------------------------------------------------------------------------------------------------------------
  
//Início dos comandos do botão "Cursos"
    //<null>
    private void buttonCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCursosActionPerformed
            try {
                // TODO add your handling code here:
                abrirTelaCursos();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonCursosActionPerformed
    //Faz o botão Cursos ficar Azul ao passar o mouse por cima
    private void buttonCursosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCursosMouseEntered
        // TODO add your handling code here:
        ImageIcon CursosAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/CursosAzul.png"));
        buttonCursos.setIcon(CursosAzul);
    }//GEN-LAST:event_buttonCursosMouseEntered
    //Faz o botão Sobre voltar à cor padrão ao tirar o mouse de cima
    private void buttonCursosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCursosMouseExited
        // TODO add your handling code here:
        ImageIcon Cursos = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Cursos.png"));
        buttonCursos.setIcon(Cursos);
    }//GEN-LAST:event_buttonCursosMouseExited
//Fim dos comandos do botão "Cursos"

    
//---------------------------------------------------------------------------------------------------------------------------------

//Início dos comandos do botão "PR"
    //Faz o botão PR ficar Azul ao passar o mouse por cima
    private void buttonPRMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPRMouseEntered
        // TODO add your handling code here:
        ImageIcon PRAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/IconSynapseAzul.png"));
        buttonPR.setIcon(PRAzul);
    }//GEN-LAST:event_buttonPRMouseEntered
    //Faz o botão PR voltar à cor padrão ao tirar o mouse de cima
    private void buttonPRMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPRMouseExited
        // TODO add your handling code here:
        ImageIcon PR = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/IconSynapsePreto.png"));
        buttonPR.setIcon(PR);
    }//GEN-LAST:event_buttonPRMouseExited
    //<null>
    private void buttonPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPRActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonPRActionPerformed
//Fim dos comandos do botão "PR"
    
//---------------------------------------------------------------------------------------------------------------------------------

//Início dos comandos do botão X para fechar a aplicação
    //Faz com que o botao mude de icone e fique vermelho ao passar o mouse por cima
    private void buttonXTelasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXTelasMouseEntered
        // TODO add your handling code here:
        ImageIcon XTelasVerm = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XFecharTelasVerm.png"));
        buttonXTelas.setIcon(XTelasVerm);
    }//GEN-LAST:event_buttonXTelasMouseEntered
    //Faz com que o botao mude de icone e volte a cor padrao ao tirar o mouse de cima
    private void buttonXTelasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXTelasMouseExited
        // TODO add your handling code here:
        ImageIcon XTelas = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XFecharTelas.png"));
        buttonXTelas.setIcon(XTelas);
    }//GEN-LAST:event_buttonXTelasMouseExited
    //Fecha a aplicação ao apertar no botao X
    private void buttonXTelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXTelasActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_buttonXTelasActionPerformed
//Fim dos comandos do botão X para fechar a aplicação

//---------------------------------------------------------------------------------------------------------------------------------

//Início dos comandos do botão "Aplicar" na parte de cupom
    //Faz o botão Aplicar ficar Azul ao passar o mouse por cima
    private void buttonAplicarDescMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAplicarDescMouseEntered
        // TODO add your handling code here:
        ImageIcon AplicarDescAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/AplicarDescontoAzul.png"));
        buttonAplicarDesc.setIcon(AplicarDescAzul);
    }//GEN-LAST:event_buttonAplicarDescMouseEntered
    //Faz o botão Aplicar voltar à cor padrão ao tirar o mouse de cima
    private void buttonAplicarDescMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAplicarDescMouseExited
        // TODO add your handling code here:
        ImageIcon AplicarDesc = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/AplicarDesconto.png"));
        buttonAplicarDesc.setIcon(AplicarDesc);
    }//GEN-LAST:event_buttonAplicarDescMouseExited
    //<null>
    private void buttonAplicarDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAplicarDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonAplicarDescActionPerformed
//Fim dos comandos do botão "Aplicar" na parte de cupom

//---------------------------------------------------------------------------------------------------------------------------------

//Início dos comandos do botão "Finalizar Compra"
    //<null>
    private void buttonFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFinalizarCompraActionPerformed
            try {
                // TODO add your handling code here:
                gerenciador.cadastrarAcessos(carrinho);
                labelAlerta.setText("Compra finalizada com sucesso.");
                mensagemErro();
            } catch (SQLException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            Session.limparCarrinho();
            
            carrinho.revalidate();
            carrinho.repaint();
            produtoCarrinho.atualizarLabel(labelQtdCarrinho);
            try {
                gerenciador.atualizarLabelValor(labelTotal);
                gerenciador.atualizarBotao(buttonFinalizarCompra);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonFinalizarCompraActionPerformed
        
    private void mensagemErro()
    {        
         // Garantir que o painel esteja visível após a exclusão
        panelAlerta.setVisible(true);

        // Revalide o layout para garantir que o painel seja renderizado corretamente
        panelAlerta.revalidate();
        panelAlerta.repaint();

        // Definir tempo inicial da contagem regressiva
        final int tempoInicial = 5;
        final int[] tempoRestante = {tempoInicial}; // Usamos um array para poder alterar o valor dentro do Timer

        // **Cancelar o Timer anterior, se houver** (importante para a segunda, terceira exclusão, etc.)
        if (timerAlerta != null && timerAlerta.isRunning()) 
        {
            timerAlerta.stop();  // Para o Timer atual, se já estiver em execução
        }

        // Criar o Timer para a contagem regressiva
        timerAlerta = new Timer(1000, new ActionListener() 
        {
            @Override
            public void actionPerformed(ActionEvent e) 
            {
                // Atualiza o texto da contagem regressiva
                if (tempoRestante[0] > 0) 
                {
                    tempoRestante[0]--;
                    labelContagem.setText("Tempo restante: " + tempoRestante[0]);
                } 
                else
                {
                    // Quando a contagem chega a 0, reinicia o tempo
                    tempoRestante[0] = tempoInicial; // Reinicia para 5 segundos
                    labelContagem.setText("Tempo restante: " + tempoRestante[0]);

                    // Esconde o painel após a contagem
                    panelAlerta.setVisible(false);

                    // Para o Timer
                    timerAlerta.stop();

                    acaoConcluida = true;
                }
            }
        });

        // Inicia o Timer de contagem regressiva
        timerAlerta.start();

        // Ação do botão "OK" para fechar o painel antes do tempo
        buttonOkAlerta.addActionListener(new ActionListener() 
        {
            @Override
            public void actionPerformed(ActionEvent e) 
            {
                // Para o Timer imediatamente
                if (timerAlerta != null) 
                {
                    timerAlerta.stop();
                }

                // Esconde o painel imediatamente
                panelAlerta.setVisible(false);

                acaoConcluida = true;

                // Opcional: Resetar a contagem se necessário (reiniciar a contagem para o próximo uso)
                tempoRestante[0] = tempoInicial; // Reinicia a contagem
                labelContagem.setText("Tempo restante: " + tempoRestante[0]);
            }
        });
    }
    
    private void buttonPerfilMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPerfilMouseEntered
        // TODO add your handling code here:
        ImageIcon PerfilAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/ContaAzul.png"));
        buttonPerfil.setIcon(PerfilAzul);
        labelPerfil.setForeground(new Color(69,82,173));
    }//GEN-LAST:event_buttonPerfilMouseEntered

    private void buttonPerfilMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonPerfilMouseExited
        // TODO add your handling code here:
        ImageIcon PerfilAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Conta.png"));
        buttonPerfil.setIcon(PerfilAzul);
        labelPerfil.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_buttonPerfilMouseExited

    private void buttonPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPerfilActionPerformed
        if(panelPerfil.isVisible())
        {
            panelPerfil.setVisible(false);
        }
        else
        {
            panelPerfil.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonPerfilActionPerformed

    private void buttonMeuPerfilMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMeuPerfilMouseEntered
        // TODO add your handling code here:
        ImageIcon PerfilAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/MeuPerfilAzul.png"));
        buttonMeuPerfil.setIcon(PerfilAzul);
    }//GEN-LAST:event_buttonMeuPerfilMouseEntered

    private void buttonMeuPerfilMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMeuPerfilMouseExited
        // TODO add your handling code here:
        ImageIcon Perfil = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/MeuPerfil.png"));
        buttonMeuPerfil.setIcon(Perfil);
    }//GEN-LAST:event_buttonMeuPerfilMouseExited

    private void buttonMeuPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMeuPerfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonMeuPerfilActionPerformed

    private void buttonMeusCursosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMeusCursosMouseEntered
        // TODO add your handling code here:
        ImageIcon MeusCursosAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/MeusCursosAzul.png"));
        buttonMeusCursos.setIcon(MeusCursosAzul);
    }//GEN-LAST:event_buttonMeusCursosMouseEntered

    private void buttonMeusCursosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMeusCursosMouseExited
        // TODO add your handling code here:
        ImageIcon MeusCursos = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/MeusCursos.png"));
        buttonMeusCursos.setIcon(MeusCursos);
    }//GEN-LAST:event_buttonMeusCursosMouseExited

    private void buttonMeusCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMeusCursosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonMeusCursosActionPerformed

    private void buttonLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLogoutMouseEntered
        // TODO add your handling code here:
        ImageIcon LogoutAzul = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/LogoutAzul.png"));
        buttonLogout.setIcon(LogoutAzul);
    }//GEN-LAST:event_buttonLogoutMouseEntered

    private void buttonLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonLogoutMouseExited
        // TODO add your handling code here:
        ImageIcon Logout = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Logout.png"));
        buttonLogout.setIcon(Logout);
    }//GEN-LAST:event_buttonLogoutMouseExited

    private void buttonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogoutActionPerformed
        // TODO add your handling code here:
        Session.logout();
            try {
                abrirTelaMenu();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonLogoutActionPerformed

    private void buttonFinalizarCompraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonFinalizarCompraMouseEntered
        // TODO add your handling code here:
        ImageIcon FC2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/FinalizarCompra2.png"));
        buttonFinalizarCompra.setIcon(FC2);
    }//GEN-LAST:event_buttonFinalizarCompraMouseEntered

    private void buttonFinalizarCompraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonFinalizarCompraMouseExited
        // TODO add your handling code here:
        ImageIcon FC = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/FinalizarCompra.png"));
        buttonFinalizarCompra.setIcon(FC);
    }//GEN-LAST:event_buttonFinalizarCompraMouseExited

    private void buttonOkAlertaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonOkAlertaMouseEntered
        // TODO add your handling code here:
        buttonOkAlerta.setFont(poppins.deriveFont(25f));
    }//GEN-LAST:event_buttonOkAlertaMouseEntered

    private void buttonOkAlertaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonOkAlertaMouseExited
        // TODO add your handling code here:
        buttonOkAlerta.setFont(poppins.deriveFont(20f));
    }//GEN-LAST:event_buttonOkAlertaMouseExited

    private void panelAlertaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelAlertaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_panelAlertaMouseClicked
//Fim dos comandos do botão "Finalizar Compra"
    
//---------------------------------------------------------------------------------------------------------------------------------
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Tela_Carrinho().setVisible(true);
                } catch (FontFormatException ex) {
                    Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Tela_Carrinho.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAplicarDesc;
    private javax.swing.JButton buttonCursos;
    private javax.swing.JButton buttonFinalizarCompra;
    private javax.swing.JButton buttonLogout;
    private javax.swing.JButton buttonMeuPerfil;
    private javax.swing.JButton buttonMeusCursos;
    private javax.swing.JButton buttonOkAlerta;
    private javax.swing.JButton buttonPR;
    private javax.swing.JButton buttonPerfil;
    private javax.swing.JButton buttonSobre;
    private javax.swing.JButton buttonSynapse;
    private javax.swing.JButton buttonSynapseLogo;
    private javax.swing.JButton buttonXTelas;
    private javax.swing.JButton buttonXpesq;
    private javax.swing.JPanel carrinho;
    private javax.swing.JTextField fieldPesquisa;
    private javax.swing.JLabel fundo;
    private javax.swing.JLabel fundoAlerta;
    private javax.swing.JPanel fundoPrincipal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAlerta;
    private javax.swing.JLabel labelContagem;
    private javax.swing.JLabel labelDescontos;
    private javax.swing.JLabel labelPerfil;
    private javax.swing.JLabel labelQtdCarrinho;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JPanel panelAlerta;
    private javax.swing.JPanel panelAlerta2;
    private javax.swing.JPanel panelPerfil;
    private javax.swing.JScrollPane scrollbar;
    // End of variables declaration//GEN-END:variables
}
