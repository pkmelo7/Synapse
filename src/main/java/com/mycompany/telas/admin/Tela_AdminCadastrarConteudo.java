//@author @pkmelo7

package com.mycompany.telas.admin;

//Importações necessárias
import com.mycompany.classes.Curso;
import com.mycompany.classes.Session;
import com.mycompany.scrollbar.ScrollBarCustom;
import com.mycompany.scrollbar.ScrollBarCustom_Admin;
import com.mycompany.scrollbar.ScrollBarCustom_Cursos;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.SwingConstants;
import javax.swing.Timer;
//Fim das importações necessárias

public class Tela_AdminCadastrarConteudo extends javax.swing.JFrame {
    
    //Declaração de variáveis 
        Curso c = Session.getCursoSelecionado();
        
        Session sessao = new Session();
    
        //variavel para uso da fonte digital7
        Font digital7;
        GraphicsEnvironment GE = GraphicsEnvironment.getLocalGraphicsEnvironment();
        
         //Variaveis para configurar a fonte como poppins
        Font poppins;
        
        //Variavel para trazer o icone do projeto
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/icon.png"));
        
        String message;
        int imagem = 1;
    //Final da declaração de variáveis
    
    //Declaração de métodos
        
        public void abrirTelaAnterior() throws FontFormatException, IOException
        {
            Tela_AdminCadastrar1 TelaAnterior = new Tela_AdminCadastrar1();
            TelaAnterior.setVisible(true);
            this.dispose();
        }
        
        public void abrirTelaCadastroCurso() throws FontFormatException, IOException
        {
            Tela_AdminCadastrarCurso TelaCurso = new Tela_AdminCadastrarCurso();
            TelaCurso.setVisible(true);
            this.dispose();
        }
   
        
    //Fim da declaração de métodos
        
    public Tela_AdminCadastrarConteudo() throws FontFormatException, IOException {
        //cria as fontes do projeto
        this.poppins = Font.createFont(Font.TRUETYPE_FONT, new File("src/main/resources/fonts/Poppins-Bold.ttf"));
        this.digital7 = Font.createFont(Font.TRUETYPE_FONT, new File("src/main/resources/fonts/digital-7.ttf"));
        initComponents();
        
        scrollImagem.setVerticalScrollBar(new ScrollBarCustom_Admin()); 
        ScrollBarCustom_Admin sb = new ScrollBarCustom_Admin();
        sb.setOrientation(JScrollBar.HORIZONTAL);
        scrollImagem.setHorizontalScrollBar(sb);
              
        labelImagem.setHorizontalAlignment(SwingConstants.CENTER);
        labelImagem.setVerticalAlignment(SwingConstants.CENTER);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        telaAdmin = new javax.swing.JPanel();
        buttonInserirConteudo = new javax.swing.JButton();
        buttonInserirImagem = new javax.swing.JButton();
        scrollImagem = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        labelImagem = new javax.swing.JLabel();
        buttonExibir = new javax.swing.JButton();
        labelCaminho = new javax.swing.JLabel();
        fieldCaminho = new javax.swing.JTextField();
        buttonFinalizarAdicao = new javax.swing.JButton();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Synapse Connect");
        setBackground(new java.awt.Color(224, 222, 222));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setIconImage(icon.getImage());
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 750));
        getContentPane().setLayout(null);

        panel.setBackground(new java.awt.Color(0, 0, 0));
        panel.setLayout(null);

        messageLabel.setBackground(new java.awt.Color(0, 0, 0));
        messageLabel.setFont(digital7.deriveFont(100f));
        messageLabel.setForeground(new java.awt.Color(0, 255, 8));
        messageLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        messageLabel.setHorizontalAlignment(SwingConstants.CENTER);
        messageLabel.setVerticalAlignment(SwingConstants.TOP);
        message = "Imagem Principal do Curso";
        typingEffect(messageLabel, message, telaAdmin);
        panel.add(messageLabel);
        messageLabel.setBounds(0, 0, 1366, 120);

        telaAdmin.setBackground(new java.awt.Color(0, 0, 0));
        telaAdmin.setForeground(new java.awt.Color(0, 0, 0));
        telaAdmin.setVisible(false);
        telaAdmin.setLayout(null);

        buttonInserirConteudo.setBackground(new java.awt.Color(0, 0, 0));
        buttonInserirConteudo.setFont(digital7.deriveFont(75f));
        buttonInserirConteudo.setForeground(new java.awt.Color(0, 255, 8));
        buttonInserirConteudo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/proximaPagina.png"))); // NOI18N
        buttonInserirConteudo.setBorder(null);
        buttonInserirConteudo.setBorderPainted(false);
        buttonInserirConteudo.setContentAreaFilled(false);
        buttonInserirConteudo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonInserirConteudo.setFocusPainted(false);
        buttonInserirConteudo.setVisible(false);
        buttonInserirConteudo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonInserirConteudoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonInserirConteudoMouseExited(evt);
            }
        });
        buttonInserirConteudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserirConteudoActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonInserirConteudo);
        buttonInserirConteudo.setBounds(1120, 675, 230, 70);

        buttonInserirImagem.setBackground(new java.awt.Color(0, 0, 0));
        buttonInserirImagem.setFont(digital7.deriveFont(75f));
        buttonInserirImagem.setForeground(new java.awt.Color(0, 255, 8));
        buttonInserirImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/prosseguirAdm.png"))); // NOI18N
        buttonInserirImagem.setBorder(null);
        buttonInserirImagem.setBorderPainted(false);
        buttonInserirImagem.setContentAreaFilled(false);
        buttonInserirImagem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonInserirImagem.setFocusPainted(false);
        buttonInserirImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonInserirImagemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonInserirImagemMouseExited(evt);
            }
        });
        buttonInserirImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserirImagemActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonInserirImagem);
        buttonInserirImagem.setBounds(1150, 675, 200, 70);

        scrollImagem.setBackground(new java.awt.Color(0, 0, 0));
        scrollImagem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        scrollImagem.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 1336, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(labelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addContainerGap())
        );

        scrollImagem.setViewportView(jPanel2);

        telaAdmin.add(scrollImagem);
        scrollImagem.setBounds(15, 195, 1336, 458);

        buttonExibir.setBackground(new java.awt.Color(0, 0, 0));
        buttonExibir.setFont(digital7.deriveFont(20f));
        buttonExibir.setForeground(new java.awt.Color(0, 255, 8));
        buttonExibir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/Exibir.png"))); // NOI18N
        buttonExibir.setBorder(null);
        buttonExibir.setBorderPainted(false);
        buttonExibir.setContentAreaFilled(false);
        buttonExibir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonExibir.setFocusPainted(false);
        buttonExibir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonExibirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonExibirMouseExited(evt);
            }
        });
        buttonExibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExibirActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonExibir);
        buttonExibir.setBounds(1190, 110, 170, 60);

        labelCaminho.setBackground(new java.awt.Color(0, 0, 0));
        labelCaminho.setFont(poppins.deriveFont(25f));
        labelCaminho.setForeground(new java.awt.Color(0, 178, 6));
        labelCaminho.setText("Caminho da Imagem:");
        labelCaminho.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        telaAdmin.add(labelCaminho);
        labelCaminho.setBounds(90, 115, 370, 50);

        fieldCaminho.setBackground(new java.awt.Color(0, 0, 0));
        fieldCaminho.setFont(poppins.deriveFont(25f));
        fieldCaminho.setForeground(new java.awt.Color(0, 255, 8));
        fieldCaminho.setToolTipText("");
        fieldCaminho.setBorder(null);
        fieldCaminho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldCaminhoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldCaminhoFocusLost(evt);
            }
        });
        telaAdmin.add(fieldCaminho);
        fieldCaminho.setBounds(90, 115, 1070, 50);

        buttonFinalizarAdicao.setBackground(new java.awt.Color(0, 0, 0));
        buttonFinalizarAdicao.setFont(digital7.deriveFont(75f));
        buttonFinalizarAdicao.setForeground(new java.awt.Color(0, 255, 8));
        buttonFinalizarAdicao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/adicaoFinalizar.png"))); // NOI18N
        buttonFinalizarAdicao.setBorder(null);
        buttonFinalizarAdicao.setBorderPainted(false);
        buttonFinalizarAdicao.setContentAreaFilled(false);
        buttonFinalizarAdicao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonFinalizarAdicao.setFocusPainted(false);
        buttonFinalizarAdicao.setVisible(false);
        buttonFinalizarAdicao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonFinalizarAdicaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonFinalizarAdicaoMouseExited(evt);
            }
        });
        buttonFinalizarAdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFinalizarAdicaoActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonFinalizarAdicao);
        buttonFinalizarAdicao.setBounds(870, 675, 230, 70);

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/FundosTelas/FundoCadastrarConteudo.png"))); // NOI18N
        telaAdmin.add(fundo);
        fundo.setBounds(0, 0, 1366, 768);

        panel.add(telaAdmin);
        telaAdmin.setBounds(0, 0, 1366, 768);

        getContentPane().add(panel);
        panel.setBounds(0, 0, 1366, 768);

        setBounds(-6, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents
//---------------------------------------------------------------------------------------------------------------------------------

//Inicio dos comandos do botao Cursos
    //altera o texto pra frente ao passar o mouse por cima do botao
    private void buttonInserirImagemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonInserirImagemMouseEntered
        // TODO add your handling code here:
        ImageIcon prosseguir2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/prosseguirAdm2.png"));
        buttonInserirImagem.setIcon(prosseguir2);
    }//GEN-LAST:event_buttonInserirImagemMouseEntered
    //altera o texto de volta para a posicao padrao ao tirar o mouse de cima do botao
    private void buttonInserirImagemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonInserirImagemMouseExited
        // TODO add your handling code here:
        ImageIcon prosseguir = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/prosseguirAdm.png"));
        buttonInserirImagem.setIcon(prosseguir);
    }//GEN-LAST:event_buttonInserirImagemMouseExited
    //<null>
    private void buttonInserirImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInserirImagemActionPerformed
        // TODO add your handling code here:
        String caminhoImagem = fieldCaminho.getText();
        int idCurso = Session.getCursoSelecionado().getId();
        
        if(labelImagem.getIcon()!=null)
        {   
            if(c.inserirImagem(caminhoImagem, idCurso))
            {
                buttonInserirImagem.setVisible(false);
                
                //ADD PAINEL MENSAGEM IMAGEM CADASTRADA COM SUCESSO
                
                messageLabel.setText("Imagem "+imagem+" de conteudo");
                imagem++;
                
                messageLabel.revalidate();
                messageLabel.repaint();
                
                labelImagem.setIcon(null);
                fieldCaminho.setText("");
                labelCaminho.setText("Caminho da Imagem:");
            }
        }
        else
        {
            System.out.println("imagem nao setada no icone");
        }
    }//GEN-LAST:event_buttonInserirImagemActionPerformed

//Fim dos comandos do botao Cursos

//---------------------------------------------------------------------------------------------------------------------------------


    private void buttonExibirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExibirMouseEntered
        // TODO add your handling code here:
        ImageIcon Listar2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Exibir2.png"));
        buttonExibir.setIcon(Listar2);
    }//GEN-LAST:event_buttonExibirMouseEntered

    private void buttonExibirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExibirMouseExited
        // TODO add your handling code here:
        ImageIcon Listar = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Exibir.png"));
        buttonExibir.setIcon(Listar);
    }//GEN-LAST:event_buttonExibirMouseExited

    private void buttonExibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExibirActionPerformed
        // TODO add your handling code here:
        String caminho = fieldCaminho.getText();
        ImageIcon imagem = new ImageIcon(caminho);
        
        labelImagem.setIcon(imagem);
        
        if(!buttonInserirImagem.isVisible())
        {
            if(labelImagem.getIcon()!=null)
            {
                buttonInserirConteudo.setVisible(true);
                buttonFinalizarAdicao.setVisible(true);
            }
        }
    }//GEN-LAST:event_buttonExibirActionPerformed

    private void fieldCaminhoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldCaminhoFocusGained
        // TODO add your handling code here:
        if (labelCaminho.getText().equals("Caminho da Imagem:"))
        {
            labelCaminho.setText("");
            fieldCaminho.setForeground(new Color(0,255,8));
        }
    }//GEN-LAST:event_fieldCaminhoFocusGained

    private void fieldCaminhoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldCaminhoFocusLost
        // TODO add your handling code here:
        if(labelCaminho.getText().isEmpty() && fieldCaminho.getText().isEmpty())
        {
            labelCaminho.setForeground(new Color(0,178,6));
            labelCaminho.setText("Caminho da Imagem:");
        }
    }//GEN-LAST:event_fieldCaminhoFocusLost

    private void buttonFinalizarAdicaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonFinalizarAdicaoMouseEntered
        // TODO add your handling code here:
        ImageIcon Finalizar2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/adicaoFinalizar2.png"));
        buttonFinalizarAdicao.setIcon(Finalizar2);
    }//GEN-LAST:event_buttonFinalizarAdicaoMouseEntered

    private void buttonFinalizarAdicaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonFinalizarAdicaoMouseExited
        // TODO add your handling code here:
        ImageIcon Finalizar = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/adicaoFinalizar.png"));
        buttonFinalizarAdicao.setIcon(Finalizar);
    }//GEN-LAST:event_buttonFinalizarAdicaoMouseExited

    private void buttonFinalizarAdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFinalizarAdicaoActionPerformed
        // TODO add your handling code here:
        String caminhoImagem = fieldCaminho.getText();
        int idCurso = Session.getCursoSelecionado().getId();
        
        if(labelImagem.getIcon() != null)
        {   
            if(c.inserirConteudo(caminhoImagem, idCurso))
            {   
                try {
                    //ADD PAINEL MENSAGEM IMAGEM CADASTRADA COM SUCESS
                    
                    //ADD PAinel MENSAGEM PARA ADIAO FINALIZADA.

                    abrirTelaCadastroCurso();
                } catch (FontFormatException ex) {
                    Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
            try {
                //ADD PAINEL MENSAGEM PARA ADICAO FINALIZADA
                abrirTelaCadastroCurso();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonFinalizarAdicaoActionPerformed

    private void buttonInserirConteudoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonInserirConteudoMouseEntered
        // TODO add your handling code here:
        ImageIcon Proxima2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/proximaPagina2.png"));
        buttonInserirConteudo.setIcon(Proxima2);
    }//GEN-LAST:event_buttonInserirConteudoMouseEntered

    private void buttonInserirConteudoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonInserirConteudoMouseExited
        // TODO add your handling code here:
        ImageIcon Proxima = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/proximaPagina.png"));
        buttonInserirConteudo.setIcon(Proxima);
    }//GEN-LAST:event_buttonInserirConteudoMouseExited

    private void buttonInserirConteudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInserirConteudoActionPerformed
        // TODO add your handling code here:
        String caminhoImagem = fieldCaminho.getText();
        int idCurso = Session.getCursoSelecionado().getId();
        
        if(labelImagem.getIcon()!=null)
        {   
            if(c.inserirConteudo(caminhoImagem, idCurso))
            {   
                buttonInserirConteudo.setVisible(false);
                
                //ADD PAINEL MENSAGEM IMAGEM CADASTRADA COM SUCESSO
                
                messageLabel.setText("Imagem "+imagem+" de conteudo");
                imagem++;
                
                messageLabel.revalidate();
                messageLabel.repaint();
                
                labelImagem.setIcon(null);
                fieldCaminho.setText("");
                labelCaminho.setText("Caminho da Imagem:");
            }
        }
        else
        {
            System.out.println("imagem nao setada no icone");
        }
    }//GEN-LAST:event_buttonInserirConteudoActionPerformed

    public boolean validarData(String data) 
    {
        try {
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            format.setLenient(false); // Para garantir que a data seja válida
            // Parse da data fornecida
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(format.parse(data)); 

            // Obtém o ano da data fornecida
            int anoData = calendar.get(Calendar.YEAR);
            
            // Obtém o ano atual
            int anoAtual = Calendar.getInstance().get(Calendar.YEAR);
            
            // Verifica se o ano é menor que o ano atual
            if (anoData > anoAtual) {
                return false; // Ano da data é menor que o ano atual
            }
            
            return true; // A data é válida e o ano é igual ou maior que o ano atual
        } catch (ParseException e) {
            return false; // Caso ocorra um erro no parse, a data é inválida
        }
    }
//---------------------------------------------------------------------------------------------------------------------------------

//metodos typpingEffect para criar o efeito das mensagens serem escritas
private static void typingEffect(JLabel label, String message, JPanel panel) 
{
    Timer timer = new Timer(25, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                label.setText(label.getText() + message.charAt(index));
                index++;
            }
            else 
            {
                ((Timer) e.getSource()).stop();
                panel.setVisible(true);
            }
        }
    });
    timer.start();
}

private static void typingEffect(JButton button, String message) 
{
    button.setText("");
    
    Timer timer = new Timer(25, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                button.setText(button.getText() + message.charAt(index));
                index++;
            }
            else
            {
                ((Timer) e.getSource()).stop();
            }
        }
    });
    timer.start();
}


//---------------------------------------------------------------------------------------------------------------------------------

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Tela_AdminCadastrarConteudo().setVisible(true);
                } catch (FontFormatException ex) {
                    Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Tela_AdminCadastrarConteudo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonExibir;
    private javax.swing.JButton buttonFinalizarAdicao;
    private javax.swing.JButton buttonInserirConteudo;
    private javax.swing.JButton buttonInserirImagem;
    private javax.swing.JTextField fieldCaminho;
    private javax.swing.JLabel fundo;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelCaminho;
    private javax.swing.JLabel labelImagem;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPanel panel;
    private javax.swing.JScrollPane scrollImagem;
    private javax.swing.JPanel telaAdmin;
    // End of variables declaration//GEN-END:variables
}