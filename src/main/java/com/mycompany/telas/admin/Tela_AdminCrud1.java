//@author @pkmelo7

package com.mycompany.telas.admin;

//Importações necessárias
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.Timer;
//Fim das importações necessárias

public class Tela_AdminCrud1 extends javax.swing.JFrame {
    
    //Declaração de variáveis 
        //variavel para uso da fonte digital7
        Font digital7;
        GraphicsEnvironment GE = GraphicsEnvironment.getLocalGraphicsEnvironment();
        
        //Variavel para trazer o icone do projeto
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/icon.png")); 
        
        
    //Final da declaração de variáveis
    
    //Declaração de métodos
        
        public void abrirTelaAnterior() throws FontFormatException, IOException
        {
            Tela_Admin2 TelaAnterior = new Tela_Admin2();
            TelaAnterior.setVisible(true);
            this.dispose();
        }
        
        public void abrirCrudUser() throws FontFormatException, IOException
        {
            Tela_AdminCrudUser CrudUser = new Tela_AdminCrudUser();
            CrudUser.setVisible(true);
            this.dispose();
        }
        
        public void abrirCrudCursos() throws FontFormatException, IOException, SQLException
        {
            Tela_AdminCrudCursos CrudCursos = new Tela_AdminCrudCursos();
            CrudCursos.setVisible(true);
            this.dispose();
        }
   
    //Fim da declaração de métodos
        
    public Tela_AdminCrud1() throws FontFormatException, IOException {
        //cria a fonte digital7 no projeto
        this.digital7 = Font.createFont(Font.TRUETYPE_FONT, new File("src/main/resources/fonts/digital-7.ttf"));
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        telaAdmin = new javax.swing.JPanel();
        messageLabel1 = new javax.swing.JLabel();
        messageLabel2 = new javax.swing.JLabel();
        buttonVoltar = new javax.swing.JButton();
        buttonUsuarios = new javax.swing.JButton();
        buttonCursos = new javax.swing.JButton();
        buttonXTelas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Synapse Connect");
        setBackground(new java.awt.Color(224, 222, 222));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setIconImage(icon.getImage());
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 750));
        getContentPane().setLayout(null);

        telaAdmin.setBackground(new java.awt.Color(0, 0, 0));
        telaAdmin.setForeground(new java.awt.Color(0, 0, 0));
        telaAdmin.setLayout(null);

        messageLabel1.setBackground(new java.awt.Color(0, 0, 0));
        messageLabel1.setFont(digital7.deriveFont(100f));
        messageLabel1.setForeground(new java.awt.Color(0, 255, 8));
        messageLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        messageLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        String message = "O que gostaria de editar,";
        typingEffect(messageLabel1, message, messageLabel2, buttonUsuarios, buttonCursos, buttonVoltar);
        telaAdmin.add(messageLabel1);
        messageLabel1.setBounds(0, 15, 1366, 100);

        messageLabel2.setBackground(new java.awt.Color(0, 0, 0));
        messageLabel2.setFont(digital7.deriveFont(100f));
        messageLabel2.setForeground(new java.awt.Color(0, 255, 8));
        messageLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        messageLabel2.setHorizontalAlignment(SwingConstants.CENTER);
        telaAdmin.add(messageLabel2);
        messageLabel2.setBounds(0, 115, 1366, 100);

        buttonVoltar.setBackground(new java.awt.Color(0, 0, 0));
        buttonVoltar.setFont(digital7.deriveFont(50f));
        buttonVoltar.setForeground(new java.awt.Color(0, 255, 8));
        buttonVoltar.setBorder(null);
        buttonVoltar.setBorderPainted(false);
        buttonVoltar.setContentAreaFilled(false);
        buttonVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonVoltar.setFocusPainted(false);
        buttonCursos.setHorizontalAlignment(SwingConstants.LEFT);
        buttonCursos.setVisible(false);
        buttonVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonVoltarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonVoltarMouseExited(evt);
            }
        });
        buttonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVoltarActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonVoltar);
        buttonVoltar.setBounds(16, 700, 240, 60);

        buttonUsuarios.setBackground(new java.awt.Color(0, 0, 0));
        buttonUsuarios.setFont(digital7.deriveFont(75f));
        buttonUsuarios.setForeground(new java.awt.Color(0, 255, 8));
        buttonUsuarios.setBorder(null);
        buttonUsuarios.setBorderPainted(false);
        buttonUsuarios.setContentAreaFilled(false);
        buttonUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonUsuarios.setFocusPainted(false);
        buttonUsuarios.setHorizontalAlignment(SwingConstants.LEFT);
        buttonUsuarios.setVisible(false);
        buttonUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonUsuariosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonUsuariosMouseExited(evt);
            }
        });
        buttonUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUsuariosActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonUsuarios);
        buttonUsuarios.setBounds(50, 325, 350, 90);

        buttonCursos.setBackground(new java.awt.Color(0, 0, 0));
        buttonCursos.setFont(digital7.deriveFont(75f));
        buttonCursos.setForeground(new java.awt.Color(0, 255, 8));
        buttonCursos.setBorder(null);
        buttonCursos.setBorderPainted(false);
        buttonCursos.setContentAreaFilled(false);
        buttonCursos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonCursos.setFocusPainted(false);
        buttonVoltar.setHorizontalAlignment(SwingConstants.LEFT);
        buttonVoltar.setVisible(false);
        buttonCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonCursosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonCursosMouseExited(evt);
            }
        });
        buttonCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCursosActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonCursos);
        buttonCursos.setBounds(50, 475, 290, 90);

        buttonXTelas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/XFecharTelasAdmin.png"))); // NOI18N
        buttonXTelas.setBorder(null);
        buttonXTelas.setBorderPainted(false);
        buttonXTelas.setContentAreaFilled(false);
        buttonXTelas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonXTelas.setFocusPainted(false);
        buttonXTelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonXTelasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonXTelasMouseExited(evt);
            }
        });
        buttonXTelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXTelasActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonXTelas);
        buttonXTelas.setBounds(1280, 0, 86, 25);

        getContentPane().add(telaAdmin);
        telaAdmin.setBounds(0, 0, 1366, 768);

        setBounds(-6, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents
//---------------------------------------------------------------------------------------------------------------------------------

//Inicio dos comandos do botao "> Usuarios"
    //<null>
    private void buttonUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUsuariosActionPerformed
            try {
                // TODO add your handling code here:
                abrirCrudUser();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonUsuariosActionPerformed
    //altera o texto pra frente ao passar o mouse por cima do botao
    private void buttonUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonUsuariosMouseEntered
        // TODO add your handling code here:
        if(buttonUsuarios.getText().equals("> Usuarios"))
        buttonUsuarios.setText(">  Usuarios");
    }//GEN-LAST:event_buttonUsuariosMouseEntered
    //altera o texto de volta para a posicao padrao ao tirar o mouse de cima do botao
    private void buttonUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonUsuariosMouseExited
        // TODO add your handling code here:
        if(buttonUsuarios.getText().equals(">  Usuarios"))
            buttonUsuarios.setText("> Usuarios");
    }//GEN-LAST:event_buttonUsuariosMouseExited
//Fim dos comandos do botao "> Usuarios"
    
//---------------------------------------------------------------------------------------------------------------------------------

//Inicio dos comandos do botao Cursos
    //altera o texto pra frente ao passar o mouse por cima do botao
    private void buttonCursosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCursosMouseEntered
        // TODO add your handling code here:
        if(buttonCursos.getText().equals("> Cursos"))
            buttonCursos.setText(">  Cursos");
    }//GEN-LAST:event_buttonCursosMouseEntered
    //altera o texto de volta para a posicao padrao ao tirar o mouse de cima do botao
    private void buttonCursosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCursosMouseExited
        // TODO add your handling code here:
        if (buttonCursos.getText().equals(">  Cursos"))
            buttonCursos.setText("> Cursos");
    }//GEN-LAST:event_buttonCursosMouseExited
    //<null>
    private void buttonCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCursosActionPerformed
            try {
                // TODO add your handling code here:
                abrirCrudCursos();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonCursosActionPerformed
//Fim dos comandos do botao Cursos
    
//---------------------------------------------------------------------------------------------------------------------------------


    private void buttonVoltarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVoltarMouseEntered
        // TODO add your handling code here:
        if(buttonVoltar.getText().equals("<-- Voltar"))
            buttonVoltar.setText("<--  Voltar");
    }//GEN-LAST:event_buttonVoltarMouseEntered

    private void buttonVoltarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVoltarMouseExited
        // TODO add your handling code here:
        if (buttonVoltar.getText().equals("<--  Voltar"))
            buttonVoltar.setText("<-- Voltar");
    }//GEN-LAST:event_buttonVoltarMouseExited

    private void buttonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVoltarActionPerformed
            try {
                // TODO add your handling code here:
                abrirTelaAnterior();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonVoltarActionPerformed

    private void buttonXTelasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXTelasMouseEntered
        // TODO add your handling code here:
        ImageIcon XTelasVerm = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XFecharTelasAdmin2.png"));
        buttonXTelas.setIcon(XTelasVerm);
    }//GEN-LAST:event_buttonXTelasMouseEntered

    private void buttonXTelasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXTelasMouseExited
        // TODO add your handling code here:
        ImageIcon XTelas = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XFecharTelasAdmin.png"));
        buttonXTelas.setIcon(XTelas);
    }//GEN-LAST:event_buttonXTelasMouseExited

    private void buttonXTelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXTelasActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_buttonXTelasActionPerformed

//---------------------------------------------------------------------------------------------------------------------------------

//metodos typpingEffect para criar o efeito das mensagens serem escritas+
    
private static void typingEffect(JLabel label, String message, JLabel label2, JButton bt1, JButton bt2, JButton bt3) 
{
    Timer timer = new Timer(25, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                label.setText(label.getText() + message.charAt(index));
                index++;
            }
            else 
            {
                ((Timer) e.getSource()).stop();
                label2.setVisible(true);
                typingEffect2(label2, "consultar ou excluir?", bt1, bt2, bt3); 
            }
        }
    });
    timer.start();
}
    
private static void typingEffect2(JLabel label, String message, JButton bt1, JButton bt2, JButton bt3) 
{
    Timer timer = new Timer(25, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                label.setText(label.getText() + message.charAt(index));
                index++;
            }
            else 
            {
                ((Timer) e.getSource()).stop();
                bt1.setVisible(true);
                typingEffectButton(bt1, "> Usuarios", bt2, bt3); 
            }
        }
    });
    timer.start();
}

private static void typingEffectButton(JButton button, String message, JButton bt2, JButton bt3) 
{
    button.setText("");
    
    Timer timer = new Timer(25, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                button.setText(button.getText() + message.charAt(index));
                index++;
            }
            else
            {
                ((Timer) e.getSource()).stop();
                bt2.setVisible(true);
                typingEffectButton2(bt2, "> Cursos", bt3);
            }
        }
    });
    timer.start();
}

private static void typingEffectButton2(JButton button, String message, JButton bt3) 
{
    button.setText("");
    
    Timer timer = new Timer(25, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                button.setText(button.getText() + message.charAt(index));
                index++;
            }
            else
            {
                ((Timer) e.getSource()).stop();
                bt3.setVisible(true);
                typingEffectButton3(bt3, "<-- Voltar");
            }
        }
    });
    timer.start();
}

private static void typingEffectButton3(JButton button, String message) 
{
    button.setText("");
    
    Timer timer = new Timer(25, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                button.setText(button.getText() + message.charAt(index));
                index++;
            }
            else
            {
                ((Timer) e.getSource()).stop();
            }
        }
    });
    timer.start();
}

//---------------------------------------------------------------------------------------------------------------------------------

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrud1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrud1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrud1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrud1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Tela_AdminCrud1().setVisible(true);
                } catch (FontFormatException ex) {
                    Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Tela_AdminCrud1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCursos;
    private javax.swing.JButton buttonUsuarios;
    private javax.swing.JButton buttonVoltar;
    private javax.swing.JButton buttonXTelas;
    private javax.swing.JLabel messageLabel1;
    private javax.swing.JLabel messageLabel2;
    private javax.swing.JPanel telaAdmin;
    // End of variables declaration//GEN-END:variables
}