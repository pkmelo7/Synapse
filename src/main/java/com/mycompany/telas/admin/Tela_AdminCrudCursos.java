//@author @pkmelo7

package com.mycompany.telas.admin;

//Importações necessárias
import com.mycompany.classes.Admin;
import com.mycompany.classes.Curso;
import com.mycompany.classes.Session;
import com.mycompany.scrollbar.ScrollBarCustom_Admin;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
//Fim das importações necessárias

public class Tela_AdminCrudCursos extends javax.swing.JFrame {
    
    //Declaração de variáveis 
        //variavel para uso da fonte digital7
        Font digital7;
        Font poppins;
        GraphicsEnvironment GE = GraphicsEnvironment.getLocalGraphicsEnvironment();
        
        //Variavel para trazer o icone do projeto
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/icon.png")); 
        
        Admin adm = new Admin();
        
        private boolean isEditing = false;
    //Final da declaração de variáveis
    
    //Declaração de métodos
        
        public void abrirTelaAnterior() throws FontFormatException, IOException
        {
            Tela_AdminCrud1 TelaAnterior = new Tela_AdminCrud1();
            TelaAnterior.setVisible(true);
            this.dispose();
        }
        
        public void abrirTelaEditar() throws FontFormatException, IOException, SQLException
        {
            Tela_AdminEditarCurso TelaEditar = new Tela_AdminEditarCurso();
            TelaEditar.setVisible(true);
            this.dispose();
        }
    //Fim da declaração de métodos
        
    public Tela_AdminCrudCursos() throws FontFormatException, IOException, SQLException {
        //cria a fonte digital7 no projeto
        this.digital7 = Font.createFont(Font.TRUETYPE_FONT, new File("src/main/resources/fonts/digital-7.ttf"));
        this.poppins = Font.createFont(Font.TRUETYPE_FONT, new File("src/main/resources/fonts/Poppins-Bold.ttf"));
        initComponents();
        scrollbar.setVerticalScrollBar(new ScrollBarCustom_Admin()); 
        adm.listarCursos(table, fieldPesquisa);
        
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Verificar se pelo menos uma linha está selecionada
                if (!e.getValueIsAdjusting() && table.getSelectedRow() != -1) 
                {
                    // Linha selecionada
                    if(!isEditing)
                    {
                        buttonExcluir.setVisible(true);
                        buttonEditar.setVisible(true);
                    }
                } 
                else 
                {
                    // Nenhuma linha selecionada
                    buttonExcluir.setVisible(false);
                    buttonEditar.setVisible(false);
                }
            }
        });       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonXTelas = new javax.swing.JButton();
        panelExcluir = new javax.swing.JPanel();
        panelExcluir2 = new javax.swing.JPanel();
        labelExcluir = new javax.swing.JLabel();
        buttonOkExcluir = new javax.swing.JButton();
        labelContagem = new javax.swing.JLabel();
        telaAdmin = new javax.swing.JPanel();
        scrollbar = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        table = new javax.swing.JTable();
        buttonListar = new javax.swing.JButton();
        buttonXpesq = new javax.swing.JButton();
        buttonVoltar = new javax.swing.JButton();
        buttonEditar = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();
        labelPesquisa = new javax.swing.JLabel();
        fieldPesquisa = new javax.swing.JTextField();
        label = new javax.swing.JLabel();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Synapse Connect");
        setBackground(new java.awt.Color(224, 222, 222));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setIconImage(icon.getImage());
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 750));
        getContentPane().setLayout(null);

        buttonXTelas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/XFecharTelasAdmin.png"))); // NOI18N
        buttonXTelas.setBorder(null);
        buttonXTelas.setBorderPainted(false);
        buttonXTelas.setContentAreaFilled(false);
        buttonXTelas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonXTelas.setFocusPainted(false);
        buttonXTelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonXTelasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonXTelasMouseExited(evt);
            }
        });
        buttonXTelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXTelasActionPerformed(evt);
            }
        });
        getContentPane().add(buttonXTelas);
        buttonXTelas.setBounds(1280, 0, 86, 25);

        panelExcluir.setOpaque(false);
        panelExcluir.setVisible(false);
        panelExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelExcluirMouseClicked(evt);
            }
        });
        panelExcluir.setLayout(null);

        panelExcluir2.setBackground(new java.awt.Color(0, 0, 0));
        panelExcluir2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 8), 1, true));
        panelExcluir2.setForeground(new java.awt.Color(0, 255, 8));
        panelExcluir2.setLayout(null);

        labelExcluir.setFont(digital7.deriveFont(30f));
        labelExcluir.setForeground(new java.awt.Color(0, 255, 8));
        labelExcluir.setText("Curso excluido com sucesso.");
        labelExcluir.setHorizontalAlignment(SwingConstants.CENTER);
        panelExcluir2.add(labelExcluir);
        labelExcluir.setBounds(7, 26, 490, 120);

        buttonOkExcluir.setBackground(new java.awt.Color(0, 0, 0));
        buttonOkExcluir.setFont(digital7.deriveFont(20f));
        buttonOkExcluir.setForeground(new java.awt.Color(0, 255, 8));
        buttonOkExcluir.setText("OK");
        buttonOkExcluir.setBorder(null);
        buttonOkExcluir.setBorderPainted(false);
        buttonOkExcluir.setContentAreaFilled(false);
        buttonOkExcluir.setFocusable(false);
        buttonOkExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonOkExcluirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonOkExcluirMouseExited(evt);
            }
        });
        panelExcluir2.add(buttonOkExcluir);
        buttonOkExcluir.setBounds(355, 210, 100, 40);

        labelContagem.setBackground(new java.awt.Color(0, 0, 0));
        labelContagem.setFont(digital7.deriveFont(20f));
        labelContagem.setForeground(new java.awt.Color(0, 255, 8));
        labelContagem.setText("Tempo Restante: 5");
        labelContagem.setHorizontalAlignment(SwingConstants.RIGHT);
        panelExcluir2.add(labelContagem);
        labelContagem.setBounds(87, 210, 260, 40);

        panelExcluir.add(panelExcluir2);
        panelExcluir2.setBounds(433, 243, 500, 281);

        getContentPane().add(panelExcluir);
        panelExcluir.setBounds(0, 0, 1366, 768);

        telaAdmin.setBackground(new java.awt.Color(0, 0, 0));
        telaAdmin.setForeground(new java.awt.Color(0, 0, 0));
        telaAdmin.setLayout(null);

        scrollbar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 8), 1, true));
        scrollbar.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        table.setBackground(new java.awt.Color(0, 0, 0));
        table.setFont(poppins.deriveFont(20f));
        table.setForeground(new java.awt.Color(0, 255, 8));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nome", "Data de Nascimento", "Usuário", "E-mail", "Senha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        table.setGridColor(new java.awt.Color(0, 255, 8));
        table.setRowHeight(25);
        table.setSelectionBackground(new java.awt.Color(166, 255, 169));
        table.setSelectionForeground(new java.awt.Color(0, 0, 0));
        table.getTableHeader().setBackground(Color.BLACK);
        table.getTableHeader().setForeground(Color.GREEN);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(table, javax.swing.GroupLayout.DEFAULT_SIZE, 1298, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(table, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
        );

        scrollbar.setViewportView(jPanel1);

        telaAdmin.add(scrollbar);
        scrollbar.setBounds(30, 150, 1300, 500);

        buttonListar.setBackground(new java.awt.Color(0, 0, 0));
        buttonListar.setFont(digital7.deriveFont(20f));
        buttonListar.setForeground(new java.awt.Color(0, 255, 8));
        buttonListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/Listar.png"))); // NOI18N
        buttonListar.setBorder(null);
        buttonListar.setBorderPainted(false);
        buttonListar.setContentAreaFilled(false);
        buttonListar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonListar.setFocusPainted(false);
        buttonListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonListarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonListarMouseExited(evt);
            }
        });
        buttonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonListarActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonListar);
        buttonListar.setBounds(1200, 33, 130, 60);

        buttonXpesq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/XAdmin.png"))); // NOI18N
        buttonXpesq.setBorder(null);
        buttonXpesq.setBorderPainted(false);
        buttonXpesq.setContentAreaFilled(false);
        buttonXpesq.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonXpesq.setFocusPainted(false);
        buttonXpesq.setMaximumSize(new java.awt.Dimension(86, 19));
        buttonXpesq.setMinimumSize(new java.awt.Dimension(86, 19));
        buttonXpesq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonXpesqMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonXpesqMouseExited(evt);
            }
        });
        buttonXpesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXpesqActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonXpesq);
        buttonXpesq.setBounds(1150, 45, 40, 40);

        buttonVoltar.setBackground(new java.awt.Color(0, 0, 0));
        buttonVoltar.setFont(digital7.deriveFont(50f));
        buttonVoltar.setForeground(new java.awt.Color(0, 255, 8));
        buttonVoltar.setText("<-- Voltar");
        buttonVoltar.setBorder(null);
        buttonVoltar.setBorderPainted(false);
        buttonVoltar.setContentAreaFilled(false);
        buttonVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonVoltar.setFocusPainted(false);
        buttonVoltar.setHorizontalAlignment(SwingConstants.LEFT);
        buttonVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonVoltarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonVoltarMouseExited(evt);
            }
        });
        buttonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVoltarActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonVoltar);
        buttonVoltar.setBounds(16, 700, 240, 60);

        buttonEditar.setBackground(new java.awt.Color(0, 0, 0));
        buttonEditar.setFont(digital7.deriveFont(75f));
        buttonEditar.setForeground(new java.awt.Color(0, 255, 8));
        buttonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/EditarAdmin.png"))); // NOI18N
        buttonEditar.setBorder(null);
        buttonEditar.setBorderPainted(false);
        buttonEditar.setContentAreaFilled(false);
        buttonEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonEditar.setFocusPainted(false);
        buttonEditar.setVisible(false);
        buttonEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonEditarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonEditarMouseExited(evt);
            }
        });
        buttonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonEditar);
        buttonEditar.setBounds(1130, 670, 200, 70);

        buttonExcluir.setBackground(new java.awt.Color(0, 0, 0));
        buttonExcluir.setFont(digital7.deriveFont(75f));
        buttonExcluir.setForeground(new java.awt.Color(0, 255, 8));
        buttonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Botoes/ExcluirAdmin.png"))); // NOI18N
        buttonExcluir.setBorder(null);
        buttonExcluir.setBorderPainted(false);
        buttonExcluir.setContentAreaFilled(false);
        buttonExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonExcluir.setFocusPainted(false);
        buttonExcluir.setVisible(false);
        buttonExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonExcluirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonExcluirMouseExited(evt);
            }
        });
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });
        telaAdmin.add(buttonExcluir);
        buttonExcluir.setBounds(900, 670, 200, 70);

        labelPesquisa.setBackground(new java.awt.Color(0, 0, 0));
        labelPesquisa.setFont(digital7.deriveFont(25f));
        labelPesquisa.setForeground(new java.awt.Color(0, 178, 6));
        labelPesquisa.setText("Pesquisar:");
        labelPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        telaAdmin.add(labelPesquisa);
        labelPesquisa.setBounds(80, 41, 150, 45);

        fieldPesquisa.setBackground(new java.awt.Color(0, 0, 0));
        fieldPesquisa.setFont(digital7.deriveFont(25f));
        fieldPesquisa.setForeground(new java.awt.Color(0, 255, 8));
        fieldPesquisa.setToolTipText("");
        fieldPesquisa.setBorder(null);
        fieldPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldPesquisaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldPesquisaFocusLost(evt);
            }
        });
        telaAdmin.add(fieldPesquisa);
        fieldPesquisa.setBounds(80, 41, 1030, 45);

        label.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        label.setForeground(new java.awt.Color(0, 178, 6));
        label.setText("*Selecione uma linha para editar ou excluir");
        telaAdmin.add(label);
        label.setBounds(30, 650, 500, 15);

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/FundosTelas/FundoCrudAdminCurso.png"))); // NOI18N
        telaAdmin.add(fundo);
        fundo.setBounds(0, 0, 1366, 768);
        fundo.getAccessibleContext().setAccessibleName("");

        getContentPane().add(telaAdmin);
        telaAdmin.setBounds(0, 0, 1366, 768);

        setBounds(-6, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonListarActionPerformed
        // TODO add your handling code here:
        scrollbar.setPreferredSize(new Dimension(1300, (table.getHeight())));
              
            try {
                adm.listarCursos(table, fieldPesquisa);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonListarActionPerformed

    private void buttonXpesqMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXpesqMouseEntered
        // TODO add your handling code here:
        ImageIcon XAdmin2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XAdmin2.png"));
        buttonXpesq.setIcon(XAdmin2);
    }//GEN-LAST:event_buttonXpesqMouseEntered

    private void buttonXpesqMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXpesqMouseExited
        // TODO add your handling code here:
        ImageIcon XAdmin = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XAdmin.png"));
        buttonXpesq.setIcon(XAdmin);
    }//GEN-LAST:event_buttonXpesqMouseExited

    private void buttonXpesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXpesqActionPerformed
        // TODO add your handling code here:
        fieldPesquisa.setText("");
        labelPesquisa.setText("Pesquisar:");;
    }//GEN-LAST:event_buttonXpesqActionPerformed

    private void buttonVoltarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVoltarMouseEntered
        // TODO add your handling code here:
        if(buttonVoltar.getText().equals("<-- Voltar"))
        buttonVoltar.setText("<--  Voltar");
    }//GEN-LAST:event_buttonVoltarMouseEntered

    private void buttonVoltarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonVoltarMouseExited
        // TODO add your handling code here:
        if (buttonVoltar.getText().equals("<--  Voltar"))
        buttonVoltar.setText("<-- Voltar");
    }//GEN-LAST:event_buttonVoltarMouseExited

    private void buttonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVoltarActionPerformed
        try {
            // TODO add your handling code here:
            abrirTelaAnterior();
        } catch (FontFormatException ex) {
            Logger.getLogger(Tela_AdminCadastrarUser.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Tela_AdminCadastrarUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonVoltarActionPerformed

    private void buttonEditarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditarMouseEntered
        // TODO add your handling code here:
        ImageIcon Editar2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/EditarAdmin2.png"));
        buttonEditar.setIcon(Editar2);
    }//GEN-LAST:event_buttonEditarMouseEntered

    private void buttonEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditarMouseExited
        // TODO add your handling code here:
        ImageIcon Editar = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/EditarAdmin.png"));
        buttonEditar.setIcon(Editar);
    }//GEN-LAST:event_buttonEditarMouseExited

    int linhaSelecionadaAntesDeEditar = -1;
    
    private void buttonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarActionPerformed
            // TODO add your handling code here:
        int row = table.getSelectedRow();
        Object codigo = table.getValueAt(row, 0);
        
        Session.setCodigoCurso(codigo);
        
            try {
                abrirTelaEditar();
            } catch (FontFormatException ex) {
                Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonEditarActionPerformed

    private void buttonExcluirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExcluirMouseEntered
        // TODO add your handling code here:
        ImageIcon Excluir2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/ExcluirAdmin2.png"));
        buttonExcluir.setIcon(Excluir2);
    }//GEN-LAST:event_buttonExcluirMouseEntered

    private void buttonExcluirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExcluirMouseExited
        // TODO add your handling code here:
        ImageIcon Excluir = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/ExcluirAdmin.png"));
        buttonExcluir.setIcon(Excluir);
    }//GEN-LAST:event_buttonExcluirMouseExited
    
    Timer timer;
    
    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        // Obter a linha selecionada na tabela
        int row = table.getSelectedRow();
        Object codigo = table.getValueAt(row, 0);

            try {
                // Atualizar a lista de usuários
                adm.listarCursos(table, fieldPesquisa);
            } catch (SQLException ex) {
                Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
            }

        // Verifica se a remoção foi bem-sucedida
        if (adm.removeCurso(table, codigo)) 
        {
            // Garantir que o painel esteja visível após a exclusão
            panelExcluir.setVisible(true);

            // Revalide o layout para garantir que o painel seja renderizado corretamente
            panelExcluir.revalidate();
            panelExcluir.repaint();

            // Definir tempo inicial da contagem regressiva
            final int tempoInicial = 5;
            final int[] tempoRestante = {tempoInicial}; // Usamos um array para poder alterar o valor dentro do Timer

            // **Cancelar o Timer anterior, se houver** (importante para a segunda, terceira exclusão, etc.)
            if (timer != null && timer.isRunning()) 
            {
                timer.stop();  // Para o Timer atual, se já estiver em execução
            }

            // Criar o Timer para a contagem regressiva
            timer = new Timer(1000, new ActionListener() 
            {
                @Override
                public void actionPerformed(ActionEvent e) 
                {
                    // Atualiza o texto da contagem regressiva
                    if (tempoRestante[0] > 0) 
                    {
                        tempoRestante[0]--;
                        labelContagem.setText("Tempo restante: " + tempoRestante[0]);
                    } 
                    else
                    {
                        // Quando a contagem chega a 0, reinicia o tempo
                        tempoRestante[0] = tempoInicial; // Reinicia para 5 segundos
                        labelContagem.setText("Tempo restante: " + tempoRestante[0]);

                        try {
                            // Atualizar a lista de cursos
                            adm.listarCursos(table, fieldPesquisa);
                        } catch (SQLException ex) {
                            Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        // Esconde o painel após a contagem
                        panelExcluir.setVisible(false);

                        // Para o Timer
                        timer.stop();
                    }
                }
            });

            // Inicia o Timer de contagem regressiva
            timer.start();

            // Ação do botão "OK" para fechar o painel antes do tempo
            buttonOkExcluir.addActionListener(new ActionListener() 
            {
                @Override
                public void actionPerformed(ActionEvent e) 
                {
                    // Para o Timer imediatamente
                    if (timer != null) 
                    {
                        timer.stop();
                    }

                    try {
                        // Atualizar a lista de usuários
                        adm.listarCursos(table, fieldPesquisa);
                    } catch (SQLException ex) {
                        Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    // Esconde o painel imediatamente
                    panelExcluir.setVisible(false);

                    // Opcional: Resetar a contagem se necessário (reiniciar a contagem para o próximo uso)
                    tempoRestante[0] = tempoInicial; // Reinicia a contagem
                    labelContagem.setText("Tempo restante: " + tempoRestante[0]);
                }
            });
        }
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonListarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonListarMouseEntered
        // TODO add your handling code here:
        ImageIcon Listar2 = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Listar2.png"));
        buttonListar.setIcon(Listar2);
    }//GEN-LAST:event_buttonListarMouseEntered

    private void buttonListarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonListarMouseExited
        // TODO add your handling code here:
        ImageIcon Listar = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/Listar.png"));
        buttonListar.setIcon(Listar);
    }//GEN-LAST:event_buttonListarMouseExited

    private void fieldPesquisaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPesquisaFocusGained
        // TODO add your handling code here:
        if (labelPesquisa.getText().equals("Pesquisar:"))
        {
            labelPesquisa.setText("");
            fieldPesquisa.setForeground(new Color(0,255,8));
        }
    }//GEN-LAST:event_fieldPesquisaFocusGained

    private void fieldPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPesquisaFocusLost
        // TODO add your handling code here:
        if(labelPesquisa.getText().isEmpty() && fieldPesquisa.getText().isEmpty())
        {
            labelPesquisa.setForeground(new Color(0,178,6));
            labelPesquisa.setText("Pesquisar:");
        }
    }//GEN-LAST:event_fieldPesquisaFocusLost

    private void buttonOkExcluirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonOkExcluirMouseEntered
        // TODO add your handling code here:
        buttonOkExcluir.setFont(digital7.deriveFont(25f));
    }//GEN-LAST:event_buttonOkExcluirMouseEntered

    private void buttonOkExcluirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonOkExcluirMouseExited
        // TODO add your handling code here:
        buttonOkExcluir.setFont(digital7.deriveFont(20f));
    }//GEN-LAST:event_buttonOkExcluirMouseExited

    private void panelExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelExcluirMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_panelExcluirMouseClicked

    private void buttonXTelasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXTelasMouseEntered
        // TODO add your handling code here:
        ImageIcon XTelasVerm = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XFecharTelasAdmin2.png"));
        buttonXTelas.setIcon(XTelasVerm);
    }//GEN-LAST:event_buttonXTelasMouseEntered

    private void buttonXTelasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonXTelasMouseExited
        // TODO add your handling code here:
        ImageIcon XTelas = new ImageIcon(getClass().getClassLoader().getResource("images/Botoes/XFecharTelasAdmin.png"));
        buttonXTelas.setIcon(XTelas);
    }//GEN-LAST:event_buttonXTelasMouseExited

    private void buttonXTelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXTelasActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_buttonXTelasActionPerformed
//---------------------------------------------------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------------------------------------------------

//metodos typpingEffect para criar o efeito das mensagens serem escritas
private static void typingEffect(JLabel label, String message, JButton bt1, JButton bt2) 
{
    Timer timer = new Timer(50, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                label.setText(label.getText() + message.charAt(index));
                index++;
            }
            else 
            {
                ((Timer) e.getSource()).stop();
                bt1.setVisible(true);
                typingEffectButton(bt1, "> Cadastrar", bt2); 
            }
        }
    });
    timer.start();
}

private static void typingEffectButton(JButton button, String message, JButton bt2) 
{
    button.setText("");
    
    Timer timer = new Timer(50, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                button.setText(button.getText() + message.charAt(index));
                index++;
            }
            else
            {
                ((Timer) e.getSource()).stop();
                bt2.setVisible(true);
                typingEffectButton2(bt2, "> Editar, Consultar ou Excluir");
            }
        }
    });
    timer.start();
}

private static void typingEffectButton2(JButton button, String message) 
{
    button.setText("");
    
    Timer timer = new Timer(50, new ActionListener() 
    {
        private int index = 0;

        @Override
        public void actionPerformed(ActionEvent e) 
        {
            if (index < message.length()) 
            {
                button.setText(button.getText() + message.charAt(index));
                index++;
            }
            else
            {
                ((Timer) e.getSource()).stop();
            }
        }
    });
    timer.start();
}

//---------------------------------------------------------------------------------------------------------------------------------

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Tela_AdminCrudCursos().setVisible(true);
                } catch (FontFormatException ex) {
                    Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Tela_AdminCrudCursos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEditar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonListar;
    private javax.swing.JButton buttonOkExcluir;
    private javax.swing.JButton buttonVoltar;
    private javax.swing.JButton buttonXTelas;
    private javax.swing.JButton buttonXpesq;
    private javax.swing.JTextField fieldPesquisa;
    private javax.swing.JLabel fundo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label;
    private javax.swing.JLabel labelContagem;
    private javax.swing.JLabel labelExcluir;
    private javax.swing.JLabel labelPesquisa;
    private javax.swing.JPanel panelExcluir;
    private javax.swing.JPanel panelExcluir2;
    private javax.swing.JScrollPane scrollbar;
    private javax.swing.JTable table;
    private javax.swing.JPanel telaAdmin;
    // End of variables declaration//GEN-END:variables
}